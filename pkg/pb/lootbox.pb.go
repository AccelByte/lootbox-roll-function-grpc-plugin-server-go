// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: lootbox.proto

package lootbox_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RollLootBoxRewardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string           `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Namespace string           `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Quantity  int32            `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"` // the lootbox quantity to be opened
	ItemInfo  *LootBoxItemInfo `protobuf:"bytes,4,opt,name=itemInfo,proto3" json:"itemInfo,omitempty"`  // lootbox item info
}

func (x *RollLootBoxRewardsRequest) Reset() {
	*x = RollLootBoxRewardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lootbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollLootBoxRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollLootBoxRewardsRequest) ProtoMessage() {}

func (x *RollLootBoxRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lootbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollLootBoxRewardsRequest.ProtoReflect.Descriptor instead.
func (*RollLootBoxRewardsRequest) Descriptor() ([]byte, []int) {
	return file_lootbox_proto_rawDescGZIP(), []int{0}
}

func (x *RollLootBoxRewardsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RollLootBoxRewardsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RollLootBoxRewardsRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *RollLootBoxRewardsRequest) GetItemInfo() *LootBoxItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

type RollLootBoxRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*RewardObject `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *RollLootBoxRewardsResponse) Reset() {
	*x = RollLootBoxRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lootbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollLootBoxRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollLootBoxRewardsResponse) ProtoMessage() {}

func (x *RollLootBoxRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lootbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollLootBoxRewardsResponse.ProtoReflect.Descriptor instead.
func (*RollLootBoxRewardsResponse) Descriptor() ([]byte, []int) {
	return file_lootbox_proto_rawDescGZIP(), []int{1}
}

func (x *RollLootBoxRewardsResponse) GetRewards() []*RewardObject {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type RewardObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemSku string `protobuf:"bytes,2,opt,name=itemSku,proto3" json:"itemSku,omitempty"`
	Count   int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"` // The number of this item awarded
}

func (x *RewardObject) Reset() {
	*x = RewardObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lootbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardObject) ProtoMessage() {}

func (x *RewardObject) ProtoReflect() protoreflect.Message {
	mi := &file_lootbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardObject.ProtoReflect.Descriptor instead.
func (*RewardObject) Descriptor() ([]byte, []int) {
	return file_lootbox_proto_rawDescGZIP(), []int{2}
}

func (x *RewardObject) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *RewardObject) GetItemSku() string {
	if x != nil {
		return x.ItemSku
	}
	return ""
}

func (x *RewardObject) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type LootBoxItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId         string                                 `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`                 // lootbox item id
	ItemSku        string                                 `protobuf:"bytes,2,opt,name=itemSku,proto3" json:"itemSku,omitempty"`               // lootbox item sku
	RewardCount    int32                                  `protobuf:"varint,3,opt,name=rewardCount,proto3" json:"rewardCount,omitempty"`      // How many rewards can be obtained by opening a lootbox
	LootBoxRewards []*LootBoxItemInfo_LootBoxRewardObject `protobuf:"bytes,4,rep,name=lootBoxRewards,proto3" json:"lootBoxRewards,omitempty"` // lootbox reward config
}

func (x *LootBoxItemInfo) Reset() {
	*x = LootBoxItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lootbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LootBoxItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootBoxItemInfo) ProtoMessage() {}

func (x *LootBoxItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lootbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootBoxItemInfo.ProtoReflect.Descriptor instead.
func (*LootBoxItemInfo) Descriptor() ([]byte, []int) {
	return file_lootbox_proto_rawDescGZIP(), []int{3}
}

func (x *LootBoxItemInfo) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *LootBoxItemInfo) GetItemSku() string {
	if x != nil {
		return x.ItemSku
	}
	return ""
}

func (x *LootBoxItemInfo) GetRewardCount() int32 {
	if x != nil {
		return x.RewardCount
	}
	return 0
}

func (x *LootBoxItemInfo) GetLootBoxRewards() []*LootBoxItemInfo_LootBoxRewardObject {
	if x != nil {
		return x.LootBoxRewards
	}
	return nil
}

type BoxItemObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemSku string `protobuf:"bytes,2,opt,name=itemSku,proto3" json:"itemSku,omitempty"`
	Count   int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BoxItemObject) Reset() {
	*x = BoxItemObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lootbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxItemObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxItemObject) ProtoMessage() {}

func (x *BoxItemObject) ProtoReflect() protoreflect.Message {
	mi := &file_lootbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxItemObject.ProtoReflect.Descriptor instead.
func (*BoxItemObject) Descriptor() ([]byte, []int) {
	return file_lootbox_proto_rawDescGZIP(), []int{4}
}

func (x *BoxItemObject) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *BoxItemObject) GetItemSku() string {
	if x != nil {
		return x.ItemSku
	}
	return ""
}

func (x *BoxItemObject) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type LootBoxItemInfo_LootBoxRewardObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`      // reward name
	Type   string           `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`      // reward type: REWARD/PROBABILITY_GROUP
	Items  []*BoxItemObject `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`    // reward items
	Weight int32            `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"` // reward weight
	Odds   float64          `protobuf:"fixed64,5,opt,name=odds,proto3" json:"odds,omitempty"`    // reward odds: [0.00, 100.00], Odds are calculated automatically(weight / total weight), keeping 2 decimal places
}

func (x *LootBoxItemInfo_LootBoxRewardObject) Reset() {
	*x = LootBoxItemInfo_LootBoxRewardObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lootbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LootBoxItemInfo_LootBoxRewardObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootBoxItemInfo_LootBoxRewardObject) ProtoMessage() {}

func (x *LootBoxItemInfo_LootBoxRewardObject) ProtoReflect() protoreflect.Message {
	mi := &file_lootbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootBoxItemInfo_LootBoxRewardObject.ProtoReflect.Descriptor instead.
func (*LootBoxItemInfo_LootBoxRewardObject) Descriptor() ([]byte, []int) {
	return file_lootbox_proto_rawDescGZIP(), []int{3, 0}
}

func (x *LootBoxItemInfo_LootBoxRewardObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LootBoxItemInfo_LootBoxRewardObject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LootBoxItemInfo_LootBoxRewardObject) GetItems() []*BoxItemObject {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LootBoxItemInfo_LootBoxRewardObject) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *LootBoxItemInfo_LootBoxRewardObject) GetOdds() float64 {
	if x != nil {
		return x.Odds
	}
	return 0
}

var File_lootbox_proto protoreflect.FileDescriptor

var file_lootbox_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x6f, 0x6f, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x29, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x6c, 0x6f, 0x6f, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x22, 0xc5, 0x01, 0x0a, 0x19, 0x52,
	0x6f, 0x6c, 0x6c, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f,
	0x6f, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x6f, 0x0a, 0x1a, 0x52, 0x6f, 0x6c, 0x6c, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f,
	0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x53, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x53, 0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x99, 0x03, 0x0a, 0x0f,
	0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53,
	0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6b,
	0x75, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x76, 0x0a, 0x0e, 0x6c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x6f,
	0x74, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x6c, 0x6f, 0x6f,
	0x74, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0xb9, 0x01, 0x0a, 0x13,
	0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x6f, 0x74,
	0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x0d, 0x42, 0x6f, 0x78, 0x49, 0x74,
	0x65, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x32, 0xad, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x12, 0xa1, 0x01, 0x0a,
	0x12, 0x52, 0x6f, 0x6c, 0x6c, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x44, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x6c, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x62,
	0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x4c, 0x6f, 0x6f, 0x74, 0x42, 0x6f,
	0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x9a, 0x01, 0x0a, 0x2d, 0x6e, 0x65, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x62, 0x6f, 0x78, 0x2e,
	0x76, 0x31, 0x42, 0x0c, 0x6c, 0x6f, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x6e, 0x65,
	0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x6f, 0x6f, 0x74, 0x62, 0x6f, 0x78, 0x5f, 0x76,
	0x31, 0xaa, 0x02, 0x29, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lootbox_proto_rawDescOnce sync.Once
	file_lootbox_proto_rawDescData = file_lootbox_proto_rawDesc
)

func file_lootbox_proto_rawDescGZIP() []byte {
	file_lootbox_proto_rawDescOnce.Do(func() {
		file_lootbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_lootbox_proto_rawDescData)
	})
	return file_lootbox_proto_rawDescData
}

var file_lootbox_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_lootbox_proto_goTypes = []interface{}{
	(*RollLootBoxRewardsRequest)(nil),           // 0: accelbyte.platform.entitlement.lootbox.v1.RollLootBoxRewardsRequest
	(*RollLootBoxRewardsResponse)(nil),          // 1: accelbyte.platform.entitlement.lootbox.v1.RollLootBoxRewardsResponse
	(*RewardObject)(nil),                        // 2: accelbyte.platform.entitlement.lootbox.v1.RewardObject
	(*LootBoxItemInfo)(nil),                     // 3: accelbyte.platform.entitlement.lootbox.v1.LootBoxItemInfo
	(*BoxItemObject)(nil),                       // 4: accelbyte.platform.entitlement.lootbox.v1.BoxItemObject
	(*LootBoxItemInfo_LootBoxRewardObject)(nil), // 5: accelbyte.platform.entitlement.lootbox.v1.LootBoxItemInfo.LootBoxRewardObject
}
var file_lootbox_proto_depIdxs = []int32{
	3, // 0: accelbyte.platform.entitlement.lootbox.v1.RollLootBoxRewardsRequest.itemInfo:type_name -> accelbyte.platform.entitlement.lootbox.v1.LootBoxItemInfo
	2, // 1: accelbyte.platform.entitlement.lootbox.v1.RollLootBoxRewardsResponse.rewards:type_name -> accelbyte.platform.entitlement.lootbox.v1.RewardObject
	5, // 2: accelbyte.platform.entitlement.lootbox.v1.LootBoxItemInfo.lootBoxRewards:type_name -> accelbyte.platform.entitlement.lootbox.v1.LootBoxItemInfo.LootBoxRewardObject
	4, // 3: accelbyte.platform.entitlement.lootbox.v1.LootBoxItemInfo.LootBoxRewardObject.items:type_name -> accelbyte.platform.entitlement.lootbox.v1.BoxItemObject
	0, // 4: accelbyte.platform.entitlement.lootbox.v1.LootBox.RollLootBoxRewards:input_type -> accelbyte.platform.entitlement.lootbox.v1.RollLootBoxRewardsRequest
	1, // 5: accelbyte.platform.entitlement.lootbox.v1.LootBox.RollLootBoxRewards:output_type -> accelbyte.platform.entitlement.lootbox.v1.RollLootBoxRewardsResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_lootbox_proto_init() }
func file_lootbox_proto_init() {
	if File_lootbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lootbox_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollLootBoxRewardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lootbox_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollLootBoxRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lootbox_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lootbox_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LootBoxItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lootbox_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxItemObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lootbox_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LootBoxItemInfo_LootBoxRewardObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lootbox_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lootbox_proto_goTypes,
		DependencyIndexes: file_lootbox_proto_depIdxs,
		MessageInfos:      file_lootbox_proto_msgTypes,
	}.Build()
	File_lootbox_proto = out.File
	file_lootbox_proto_rawDesc = nil
	file_lootbox_proto_goTypes = nil
	file_lootbox_proto_depIdxs = nil
}
